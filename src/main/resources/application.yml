spring:
  config:
    import: optional:file:.env[.properties]
  profiles:
    active: local
  # H2 데이터베이스 설정 (로컬 프로필)
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect

  # Redis 설정
  data:
    redis:
      host: localhost
      port: 6379

  # 로컬 카프카 설정
  kafka:
    bootstrap-servers: localhost:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: purchase_demo_group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.example.purchasedemo.dto.*"

toss:
  api:
    url: https://api.tosspayments.com/v1/payments
  redirect:
    base-url: http://localhost:8080

kakao:
  api:
    url: https://kapi.kakao.com/v2/api/talk/memo/default/send # 테스트용 나에게 보내기 API URL
    token: "${KAKAO_TOKEN}" # .env 파일의 KAKAO_TOKEN 변수를 참조합니다.
  link:
    web-url: http://localhost:8080 # 실제 서비스에서는 프론트엔드 주소로 변경
    mobile-web-url: http://localhost:8080 # 실제 서비스에서는 프론트엔드 주소로 변경
